// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    [Migration("20230906144653_Passport_ChangeDataTypes_Nationality_IssuingStateCode")]
    partial class Passport_ChangeDataTypes_Nationality_IssuingStateCode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Nebim.Era.Plt.Comm.Customer.Domain.Customer", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("BirthDate")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("birth_date");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("CommunicationPreferences")
                        .IsRequired()
                        .HasColumnType("json")
                        .HasColumnName("communication_preferences");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("created_by");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(128)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int?>("GenderCode")
                        .HasColumnType("int")
                        .HasColumnName("gender_code");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(25)")
                        .HasColumnName("phone_number");

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("surname");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("tenant_id");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(128)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("Nebim.Era.Plt.Comm.Customer.Domain.Passport", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("created_by");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("customer_id");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("varchar(128)")
                        .HasColumnName("deleted_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IssueDate")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("issue_date");

                    b.Property<int>("IssuingStateCode")
                        .HasColumnType("int")
                        .HasColumnName("issuing_state_code");

                    b.Property<int>("Nationality")
                        .HasColumnType("int")
                        .HasColumnName("nationality");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(25)")
                        .HasColumnName("number");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("varchar(128)")
                        .HasColumnName("tenant_id");

                    b.Property<DateTimeOffset?>("UpdatedAt")
                        .HasColumnType("datetime(3)")
                        .HasColumnName("updated_at");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("varchar(128)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("pk_passports");

                    b.ToTable("passports", (string)null);
                });

            modelBuilder.Entity("Nebim.Era.Plt.Comm.Customer.Domain.Customer", b =>
                {
                    b.OwnsMany("Nebim.Era.Plt.Core.Types.Address", "Addresses", b1 =>
                        {
                            b1.Property<string>("Id")
                                .HasColumnType("varchar(128)")
                                .HasColumnName("id");

                            b1.Property<string>("AddressLine")
                                .HasColumnType("varchar(100)")
                                .HasColumnName("address_line");

                            b1.Property<string>("AddressName")
                                .IsRequired()
                                .HasColumnType("varchar(50)")
                                .HasColumnName("address_name");

                            b1.Property<int?>("CityId")
                                .HasColumnType("int")
                                .HasColumnName("city_id");

                            b1.Property<string>("CityName")
                                .IsRequired()
                                .HasColumnType("varchar(25)")
                                .HasColumnName("city_name");

                            b1.Property<string>("CompanyName")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("company_name");

                            b1.Property<int?>("CountryId")
                                .HasColumnType("int")
                                .HasColumnName("country_id");

                            b1.Property<string>("CountryName")
                                .IsRequired()
                                .HasColumnType("varchar(25)")
                                .HasColumnName("country_name");

                            b1.Property<string>("CustomerId")
                                .IsRequired()
                                .HasColumnType("varchar(128)")
                                .HasColumnName("customer_id");

                            b1.Property<int?>("DistrictId")
                                .HasColumnType("int")
                                .HasColumnName("district_id");

                            b1.Property<string>("DistrictName")
                                .IsRequired()
                                .HasColumnType("varchar(25)")
                                .HasColumnName("district_name");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("varchar(50)")
                                .HasColumnName("email");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("varchar(50)")
                                .HasColumnName("first_name");

                            b1.Property<string>("IdentityNumber")
                                .IsRequired()
                                .HasColumnType("varchar(25)")
                                .HasColumnName("identity_number");

                            b1.Property<int>("InvoiceType")
                                .HasColumnType("int")
                                .HasColumnName("invoice_type");

                            b1.Property<sbyte>("IsDefault")
                                .HasColumnType("tinyint")
                                .HasColumnName("is_default");

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasColumnType("varchar(50)")
                                .HasColumnName("last_name");

                            b1.Property<string>("PhoneNumber")
                                .IsRequired()
                                .HasColumnType("varchar(25)")
                                .HasColumnName("phone_number");

                            b1.Property<string>("PostalCode")
                                .HasColumnType("varchar(10)")
                                .HasColumnName("postal_code");

                            b1.Property<string>("TaxNumber")
                                .HasColumnType("varchar(10)")
                                .HasColumnName("tax_number");

                            b1.Property<string>("TaxOffice")
                                .HasColumnType("varchar(50)")
                                .HasColumnName("tax_office");

                            b1.HasKey("Id")
                                .HasName("pk_customer_addresses");

                            b1.HasIndex("CustomerId")
                                .HasDatabaseName("ix_customer_addresses_customer_id");

                            b1.ToTable("customer_addresses", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("CustomerId")
                                .HasConstraintName("fk_customer_addresses_customers_customer_id");
                        });

                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
